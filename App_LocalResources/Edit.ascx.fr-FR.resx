<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="edit.Text" xml:space="preserve">
    <value>Editer</value>
  </data>
  <data name="addnew.Text" xml:space="preserve">
    <value>Nouvelle entrée</value>
  </data>
  <data name="delete.Text" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="return.Text" xml:space="preserve">
    <value>Retour</value>
  </data>
  <data name="save.Text" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="exit.Text" xml:space="preserve">
    <value>Quitter</value>
  </data>
  <data name="cmdRemove.Text" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="hidetitle.Text" xml:space="preserve">
    <value>Masquer la légende</value>
  </data>
  <data name="URL.Text" xml:space="preserve">
    <value>URL (http://www.mylink.com)</value>
  </data>
  <data name="link.Text" xml:space="preserve">
    <value>Lien</value>
  </data>
  <data name="linktypecsv.Text" xml:space="preserve">
    <value>Aucun,Lien interne,Lien externe,PDF</value>
  </data>
  <data name="linktab.Text" xml:space="preserve">
    <value>Page du site</value>
  </data>
  <data name="linkanchor.Text" xml:space="preserve">
    <value>Ancre dans la page (id)</value>
  </data>
  <data name="linkhref.Text" xml:space="preserve">
    <value>URL (http://www.monlien.com)</value>
  </data>
  <data name="linkpdf.Text" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="linktitle.Text" xml:space="preserve">
    <value>Texte du lien</value>
  </data>
  <data name="title.Text" xml:space="preserve">
    <value>Titre</value>
  </data>
  <data name="date.Text" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="name.Text" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="infodesc.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="add.Text" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="addselected.Text" xml:space="preserve">
    <value>Ajouter la sélection</value>
  </data>
  <data name="cancel.Text" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="deleteselected.Text" xml:space="preserve">
    <value>Supprimer la sélection</value>
  </data>
  <data name="upload.Text" xml:space="preserve">
    <value>Charger</value>
  </data>
  <data name="hidedescription.Text" xml:space="preserve">
    <value>Masquer la description</value>
  </data>
  <data name="export.Text" xml:space="preserve">
    <value>Exporter le thème</value>
  </data>
  <data name="import.Text" xml:space="preserve">
    <value>Importer le thème</value>
  </data>
  <data name="includeportaldata.Text" xml:space="preserve">
    <value>Inclure les templates Portail</value>
  </data>
  <data name="theme.Text" xml:space="preserve">
    <value>Thème</value>
  </data>
  <data name="themelevel.Text" xml:space="preserve">
    <value>Portail,Module Instance</value>
  </data>
  <data name="undo.Text" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="browse.Text" xml:space="preserve">
    <value>Parcourir</value>
  </data>
  <data name="moveup.Text" xml:space="preserve">
    <value>Vers le haut</value>
  </data>
  <data name="movedown.Text" xml:space="preserve">
    <value>Vers le bas</value>
  </data>
  <data name="image.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="file.Text" xml:space="preserve">
    <value>Fichier</value>
  </data>
  <data name="description.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="width.Text" xml:space="preserve">
    <value>Largeur</value>
  </data>
  <data name="height.Text" xml:space="preserve">
    <value>Hauteur</value>
  </data>
  <data name="actions.Text" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="documents.Text" xml:space="preserve">
    <value>Document(s)</value>
  </data>
  <data name="images.Text" xml:space="preserve">
    <value>Image(s)</value>
  </data>
  <data name="heading.Text" xml:space="preserve">
    <value>Entête</value>
  </data>
  <data name="reference.Text" xml:space="preserve">
    <value>Référence</value>
  </data>
  <data name="filemanager.Text" xml:space="preserve">
    <value>Gestionnaire de fichiers</value>
  </data>
  <data name="close.Text" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="alternativetext.Text" xml:space="preserve">
    <value>Texte alternatif</value>
  </data>
  <data name="saveexit.Text" xml:space="preserve">
    <value>Enregistrer et quitter</value>
  </data>
  <data name="Processing.Text" xml:space="preserve">
    <value>Traitement, veuillez patienter...</value>
  </data>
  <data name="linktypecsv2.Text" xml:space="preserve">
    <value>Aucun,Lien interne,Lien externe</value>
  </data>
  <data name="completed.Text" xml:space="preserve">
    <value>Effectué</value>
  </data>
  <data name="count.Text" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="createnew.Text" xml:space="preserve">
    <value>Create New AppTheme</value>
  </data>
  <data name="cssfilechange.Text" xml:space="preserve">
    <value>The page header templates for this module may need editing to use this .css template.</value>
  </data>
  <data name="date.Text1" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="defaulttemplateloaded.Text" xml:space="preserve">
    <value>Default template loaded</value>
  </data>
  <data name="delete.Text1" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="deletemoduletempl.Text" xml:space="preserve">
    <value>Remove Module template file</value>
  </data>
  <data name="deleteportalmsg.Text" xml:space="preserve">
    <value>This will DELETE ALL Portal and Module level templates.</value>
  </data>
  <data name="deleteportalresx.Text" xml:space="preserve">
    <value>Remove Portal resx file</value>
  </data>
  <data name="deleteportaltempl.Text" xml:space="preserve">
    <value>Remove Portal template file</value>
  </data>
  <data name="deletetheme.Text" xml:space="preserve">
    <value>Delete Portal AppTheme</value>
  </data>
  <data name="editmodtheme.Text" xml:space="preserve">
    <value>Edit Module Level AppTheme</value>
  </data>
  <data name="editresx.Text" xml:space="preserve">
    <value>Edit resx</value>
  </data>
  <data name="edittheme.Text" xml:space="preserve">
    <value>Edit Portal Level AppTheme</value>
  </data>
  <data name="exporttheme.Text" xml:space="preserve">
    <value>Export AppTheme</value>
  </data>
  <data name="hide.Text" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="importtheme.Text" xml:space="preserve">
    <value>Import AppTheme</value>
  </data>
  <data name="lblcreatenew.Help" xml:space="preserve">
    <value>Create new Theme: Create a new portal level theme based on an existing theme.</value>
  </data>
  <data name="lbldeletetheme.Help" xml:space="preserve">
    <value>Delete Portal Level apptheme folder.</value>
  </data>
  <data name="lbldeletetheme.Text" xml:space="preserve">
    <value>Delete Theme</value>
  </data>
  <data name="lbleditmodtheme.Help" xml:space="preserve">
    <value>Modify AppTheme: Create/Edit a MODULE level adapted version.</value>
  </data>
  <data name="lbledittheme.Help" xml:space="preserve">
    <value>Modify Existing AppTheme: Create a PORTAL level adapted version.</value>
  </data>
  <data name="lblexporttheme.Help" xml:space="preserve">
    <value>Export a apptheme to a zip file</value>
  </data>
  <data name="lblimporttheme.Help" xml:space="preserve">
    <value>Import a apptheme from a zip file</value>
  </data>
  <data name="lblmakethemesys.Help" xml:space="preserve">
    <value>Moves a portal apptheme into the DesktopModule area at system level and makes it available in ALL portals.</value>
  </data>
  <data name="lblnewname.Help" xml:space="preserve">
    <value>Name of New AppTheme</value>
  </data>
  <data name="lblnewname.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="lblthemelevel.Help" xml:space="preserve">
    <value>Where the apptheme to action is </value>
  </data>
  <data name="makethemesys.Text" xml:space="preserve">
    <value>Move AppTheme to System</value>
  </data>
  <data name="modulelevel.Text" xml:space="preserve">
    <value>Module Level</value>
  </data>
  <data name="moduletemplateloaded.Text" xml:space="preserve">
    <value>Module template loaded</value>
  </data>
  <data name="next.Text" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="portallevel.Text" xml:space="preserve">
    <value>Portal Level</value>
  </data>
  <data name="portaltemplateloaded.Text" xml:space="preserve">
    <value>Portal template loaded</value>
  </data>
  <data name="summary.Text" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="systemtemplateloaded.Text" xml:space="preserve">
    <value>System template loaded</value>
  </data>
  <data name="back.Text" xml:space="preserve">
    <value>Retour</value>
  </data>
  <data name="bespoke.Text" xml:space="preserve">
    <value>AppTheme personnalisé</value>
  </data>
  <data name="video.Text" xml:space="preserve">
    <value>Vidéo intégrée</value>
  </data>
  <data name="videoembedcode.Text" xml:space="preserve">
    <value>Code Video Embed</value>
  </data>
  <data name="pagename.Text" xml:space="preserve">
    <value>Nom de la page (Onglet/URL)</value>
  </data>
  <data name="pagetitle.Text" xml:space="preserve">
    <value>Balise meta Title (SEO)</value>
  </data>
  <data name="pagedescription.Text" xml:space="preserve">
    <value>Balise meta Description (SEO)</value>
  </data>
  <data name="pagekeywords.Text" xml:space="preserve">
    <value>Balise meta Keywords (SEO)</value>
  </data>
  <data name="anchor.Text" xml:space="preserve">
    <value>Ancre</value>
  </data>
  <data name="headingstyle.Text" xml:space="preserve">
    <value>Format</value>
  </data>
</root>