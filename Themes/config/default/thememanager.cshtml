@inherits NBrightMod.render.NBrightModRazorTokens<NBrightDNN.NBrightRazor>
@using System.Linq
@using System.Web.UI.HtmlControls
@using NBrightDNN



@AddMetaData("resourcepath","/DesktopModules/NBright/NBrightMod/App_LocalResources/")

@{
    var info = (NBrightInfo)Model.List.First();
    var tabid = Model.GetUrlParam("tabid");
}
<input id="exiturl" type="hidden" value="//@WebsiteUrl("tabid=" + tabid + "&language=" + @Model.GetUrlParam("language"))"></input>

<div id="nbrightmodtools">

    <div id="nbrightmodthemedata">
        <input id="moduleid" type="hidden" value="@info.ModuleId"/>
        <input id="updatetype" type="hidden" value=""/>
        <input id="templfilename" type="hidden" value="@info.GetXmlProperty("genxml/templfilename")" />  
        <input id="resxfilename" type="hidden" value="@info.GetXmlProperty("genxml/resxfilename")" />
        

        <div>
            <button id='refreshbutton' type='button' class='btn btn-primary'><span class='glyphicon glyphicon-refresh'></span>@ResourceKey("Edit.return")</button>
            <button id='exitedit' type='button' class='btn btn-default'><span class='glyphicon glyphicon-log-out'></span>@ResourceKey("Edit.exit")</button>
        </div>
        <hr />

        <div id="optionselectdiv">
            <div id="step1">
                <div class='buttons'>
                    <button id='edittheme' type='button' class='btn btn-success'><span class='glyphicon glyphicon-pencil'></span>@ResourceKey("Edit.edittheme")</button>
                    @DnnLabel("lbledittheme", "Edit.lbledittheme")
                </div>
                <div class='buttons'>
                    <button id='createnew' type='button' class='btn btn-primary'><span class='glyphicon glyphicon-plus'></span>@ResourceKey("Edit.createnew")</button>
                    @DnnLabel("lblcreatenew", "Edit.lblcreatenew")
                </div>
                <div class='buttons'>
                    <button id='makethemesys' type='button' class='btn btn-info'><span class='glyphicon glyphicon-link'></span>@ResourceKey("Edit.makethemesys")</button>
                    @DnnLabel("lblmakethemesys", "Edit.lblmakethemesys")
                </div>                
            </div>

            <div id="step2" style="display: none;">

                <div id="newnamediv" style="display: none;">
                    @DnnLabel("lblnewname", "Edit.lblnewname")
                    @TextBox(info, "genxml/textbox/newname")
                </div>

                <div>
                    @DnnLabel("lblthemefolder", "Settings.themefolder")
                    @ThemeSelectList(info, "genxml/dropdownlist/themefolder", "/DesktopModules/NBright/NBrightMod/Themes", " class='themefolder' ")
                    @ThemePortalSelectList(info, "genxml/dropdownlist/portalthemefolder", " class='portalthemefolder' ")
                </div>
                <hr />
                <div class='buttons'>
                    <button id='nextbutton' type='button' class='btn btn-success'><span class='glyphicon glyphicon-circle-arrow-right'></span>@ResourceKey("Edit.next")</button>
                    <button id='makethemesysbutton' type='button' class='btn btn-success'><span class='glyphicon glyphicon-circle-arrow-right'></span>@ResourceKey("Edit.next")</button>
                </div>

            </div>
        </div>

        <div id="edittemplatediv"></div>

</div>

    <div id="thememsg"></div>

        <script>
            $(document).on("NBrightMod_nbxgetcompleted", NBrightMod_nbxgetCompleted); // assign a completed event for the ajax calls

            $(document).ready(function () {

                $('#nextbutton').click(function () {
                    $('#templfilename').val('view.cshtml'); // set default to view, should always be there!
                    NBrightMod_nbxget('createtemplate', '#nbrightmodthemedata');
                });

                $('#refreshbutton').click(function () {
                    location.reload();
                });


                $('#makethemesysbutton').click(function () {
                    NBrightMod_nbxget('makethemesys', '#nbrightmodthemedata', '#edittemplatediv');
                });

                $('#edittheme').click(function () {
                    $('#updatetype').val('edit');
                    $('#step1').hide();
                    $('#step2').show();
                    $('#nextbutton').show();
                    $('#makethemesysbutton').hide();
                    $('.themefolder').show();
                    $('.portalthemefolder').hide();
                });
                $('#createnew').click(function () {
                    $('#updatetype').val('new');
                    $('#step1').hide();
                    $('#step2').show();
                    $('#newnamediv').show();
                    $('#nextbutton').show();
                    $('#makethemesysbutton').hide();
                    $('.themefolder').show();
                    $('.portalthemefolder').hide();
                });
                $('#makethemesys').click(function () {
                    $('#updatetype').val('sys');
                    $('#step1').hide();
                    $('#step2').show();
                    $('#nextbutton').hide();
                    $('#makethemesysbutton').show();
                    $('.themefolder').hide();
                    $('.portalthemefolder').show();
                });

                // copy of event in NBrightMod.js but not activated in there because we don;t load editdata.
                $('#exitedit').click(function () {
                    window.location.href = $('#exiturl').val();
                });


                $('#edittemplatediv').change(function () {
                    $('#optionselectdiv').hide();
                    $('#edittemplatediv').show();
                });

            });

            function NBrightMod_nbxgetCompleted(e) {

                if (e.cmd == 'createtemplate') {
                    NBrightMod_nbxget('gettemplatemenu', '#nbrightmodthemedata', '#edittemplatediv');
                }

                if (e.cmd == 'gettemplatemenu') {

                    $('.selectsnippet').tooltip({
                        position: { my: "left+15 center", at: "right center" }
                    });

                    $('.selectsnippet').click(function () {
                        insertAtCaret('#simpletext',$('#' + $(this).attr('snipname')).html());
                    });

                    $("#tabs").tabs({
                        activate: function (event, ui) {
                            $('#currentedittab').val(ui.newTab.index());
                        }
                        , active: $('#currentedittab').val()
                    });

                    $('.savedata').click(function () {
                        NBrightMod_nbxget('savetemplatedata', '#nbrightmodthemedata');
                    });

                    $('#deleteportaltempl').click(function () {
                        NBrightMod_nbxget('deleteportaltempl', '#nbrightmodthemedata');
                    });

                    $('#deleteportalresx').click(function () {
                        NBrightMod_nbxget('deleteportalresx', '#nbrightmodthemedata');
                    });

                    $('.selecteditlanguage').click(function () {
                        NBrightMod_nbxget('savetemplatedata', '#nbrightmodthemedata');
                        $('#editlang').val($(this).attr('lang')); // alter lang after, so we get correct data record
                    });
                    $('.selectfiletemplate').click(function () {
                        NBrightMod_nbxget('savetemplatedata', '#nbrightmodthemedata');
                        $('#templfilename').val($(this).attr('filename'));
                    });

                    $('#sideeditmenu').multilevelpushmenu();

                }

                if (e.cmd == 'savetemplatedata') {
                    NBrightMod_nbxget('gettemplatemenu', '#nbrightmodthemedata', '#edittemplatediv');
                }
                if (e.cmd == 'deleteportaltempl') {
                    NBrightMod_nbxget('gettemplatemenu', '#nbrightmodthemedata', '#edittemplatediv');
                }
                if (e.cmd == 'deleteportalresx') {
                    NBrightMod_nbxget('gettemplatemenu', '#nbrightmodthemedata', '#edittemplatediv');
                }

            };



            function insertAtCaret(selector, insertValue) {
                var position = $(selector).getCursorPosition();
                var content = $(selector).val();
                var newContent = content.substr(0, position) + insertValue + content.substr(position);
                $(selector).val(newContent);
            };


            (function ($, undefined) {
                $.fn.getCursorPosition = function () {
                    var el = $(this).get(0);
                    var pos = 0;
                    if ('selectionStart' in el) {
                        pos = el.selectionStart;
                    } else if ('selection' in document) {
                        el.focus();
                        var Sel = document.selection.createRange();
                        var SelLength = document.selection.createRange().text.length;
                        Sel.moveStart('character', -el.value.length);
                        pos = Sel.text.length - SelLength;
                    }
                    return pos;
                }
            })(jQuery);


        </script>
</div>

