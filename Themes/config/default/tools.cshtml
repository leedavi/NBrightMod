@inherits NBrightMod.render.NBrightModRazorTokens<NBrightDNN.NBrightRazor>
@using System.Linq
@using System.Web.UI.HtmlControls
@using NBrightDNN



@{
    var tabid = Model.GetUrlParam("tabid");
    var langparam = "";
    if (DnnUtils.GetCultureCodeList().Count() > 1)
    {
        langparam = "&language=" + @Model.GetUrlParam("language");
    }

    var info = (NBrightInfo)Model.List.First();

}
<input id="exiturl" type="hidden" value="//@WebsiteUrl("tabid=" + tabid + langparam)"></input>

<div id="toolsmsg"></div>

<div id="nbrightmodtools">

    @EditButtons("ex")

<hr/>

    <div class='dnnFormItem'>
        Ref: @info.GetXmlProperty("genxml/hidden/modref")
    </div>

    <div id="nbrightmodtoolsdata">
        <div>
            <button id="doportalvalidation" type="button" class="dnnSecondaryAction">@ResourceKey("Settings.doportalvalidation")</button>
        </div>
    </div>

    <hr/>

    <div class='dnnFormItem'>
        <button id="resetsettings" type="button" class="dnnSecondaryAction">@ResourceKey("Settings.reset")</button>
    </div>

    <hr />

    <h1>@ResourceKey("Settings.clonemodule")</h1>
    <p>
        <a href="#" id="btnSelectAll">@ResourceKey("Settings.selectall")</a> -
        <a href="#" id="btnDeselectAll">@ResourceKey("Settings.deselectall")</a>
    </p>
    <div id="tree1"></div>
    <div>
        <button id="clonemodule" type="button" class="dnnSecondaryAction">@ResourceKey("Settings.clonemodule")</button>
        <div id="clonemsg"></div>
    </div>

    <div id="clonedata">
        <input id="clonelist" type="hidden" value="" />
        <input id="moduleid" type="hidden" value="@Model.GetUrlParam("mid")" />
        <input id="currenttabid" type="hidden" value="@(tabid)" />
    </div>

    <script>

        @TreeViewTabsFancyTreeClones(@Model.GetUrlParam("mid"))

        $(function(){

            $("#tree1").fancytree({
                checkbox: true,
                selectMode: 2,
                source: treeData,
                select: function (event, data) {
                    // Display list of selected nodes
                    var selNodes = data.tree.getSelectedNodes();
                    // convert to title/key array
                    var selKeys = $.map(selNodes, function (node) {
                        return node.key;
                    });
                    $("#clonelist").val(selKeys.join(", "));
                },
                click: function (event, data) {
                    // We should not toggle, if target was "checkbox", because this
                    // would result in double-toggle (i.e. no toggle)
                    if ($.ui.fancytree.getEventTargetType(event) === "title") {
                        data.node.toggleSelected();
                    }
                },
                keydown: function (event, data) {
                    if (event.which === 32) {
                        data.node.toggleSelected();
                        return false;
                    }
                }
            });

            $("#btnDeselectAll").click(function () {
                $("#tree1").fancytree("getTree").visit(function (node) {
                    node.setSelected(false);
                });
                return false;
            });
            $("#btnSelectAll").click(function () {
                $("#tree1").fancytree("getTree").visit(function (node) {
                    node.setSelected(true);
                });
                return false;
            });

        });

    </script>



        <script>
            $(document).on("NBrightMod_nbxgetcompleted", NBrightMod_nbxgetCompleted); // assign a completed event for the ajax calls

            $(document).ready(function () {
                $('#doportalvalidation').click(function () {
                    NBrightMod_nbxget('doportalvalidation', '#toolsmsg');
                });

                $('#clonemodule').click(function () {
                    NBrightMod_nbxget('clonemodule', '#clonedata', '#clonemsg');
                });

                $('#resetsettings').click(function () {
                    NBrightMod_nbxget('resetsettings', '#clonedata', '#toolsmsg');
                });

                // copy of event in NBrightMod.js but not activated in there because we don;t load editdata.
                $('#exitedit').click(function () {
                    window.location.href = $('#exiturl').val();
                });
                

            });

            function NBrightMod_nbxgetCompleted(e) {

                if (e.cmd == 'clonemodule') {
                    // so something
                }

                if (e.cmd == 'resetsettings') {
                    window.location.href = $('#exiturl').val();
                }


            };


        </script>
</div>

