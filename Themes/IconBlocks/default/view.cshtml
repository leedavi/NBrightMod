@inherits NBrightMod.render.NBrightModRazorTokens<NBrightDNN.NBrightRazor>
@using System
@using System.Linq
@using System.Xml
@using NBrightDNN

@AddMetaData("resourcepath", "/DesktopModules/NBright/NBrightMod/App_LocalResources/")

@{
    var info = (NBrightInfo)Model.List.First();
}

@AddPreProcessMetaData("orderby", "ORDER BY NB1.XMLData.value('(genxml/hidden/sortrecordorder)[1]','int')", "IconBlocks.view.cshtml", Model.ModuleId.ToString(""))

@helper headersection(NBrightInfo x)
{
    if ((x.GetXmlProperty("genxml/lang/genxml/textbox/title") != "") && (!x.GetXmlPropertyBool("genxml/checkbox/hideheading")))
    {
        @HeadingOf(x.GetXmlProperty("genxml/lang/genxml/textbox/title"), x.GetXmlProperty("genxml/dropdownlist/headingstyle"))
    }
}

@helper textsection(NBrightInfo x)
{
    if ((x.GetXmlProperty("genxml/lang/genxml/textbox/ckeditor1") != ""))
    {
        @HtmlOf(x, "genxml/lang/genxml/textbox/ckeditor1")
    }
    if ((x.GetXmlProperty("genxml/lang/genxml/textbox/simpletext") != ""))
    {
        @HtmlOf(x, "genxml/lang/genxml/textbox/simpletext")
    }
}

@helper linksection(NBrightInfo x)
{
    if (x.GetXmlPropertyInt("genxml/radiobuttonlist/rbllink") == 1)
    {
        var tabddlvalue = @GetTabUrlByGuid(x, "/genxml/dropdownlist/linktab");
        <div class="iconblock-link imageclick">
            <a href="@(tabddlvalue)">@x.GetXmlProperty("genxml/lang/genxml/textbox/linktitle")</a>
        </div>
    }
    if (x.GetXmlPropertyInt("genxml/radiobuttonlist/rbllink") == 2)
    {
        var externalURL = x.GetXmlProperty("genxml/lang/genxml/textbox/externalhref");
        <div class="iconblock-link imageclick">
            <a href="@(externalURL)" target="_blank">@x.GetXmlProperty("genxml/lang/genxml/textbox/linktitle")</a>
        </div>
    }

}

    @{
        var msg = "";
        if (Model.Settings != null && !Model.Settings.ContainsKey("imgresize")) // test specific theme setting to check for settings.
        {
            msg = ResourceKey("View.nosettings").ToString();
        }
        var divid = "NBrightMod" + @Model.GetSetting("modref");
    }
    @(msg)

    <div class="iconblock-wrapper iconblock-wrapper@(Model.GetSetting("columns"))col">

        @foreach (NBrightInfo x in Model.List)
        {
            // dummy record inject for empty list
            if (@x.ItemID > 0)
            {
                <div class="iconblock-wrapperdiv">
                <div class="iconblock-icon"><i class="@x.GetXmlProperty("genxml/dropdownlist/iconstyle") fa-@x.GetXmlProperty("genxml/textbox/icon") @x.GetXmlProperty("genxml/dropdownlist/iconsize")"></i></div>
                @headersection(x)
                @textsection(x)
                @linksection(x)
                </div>
            }
        }

    </div>